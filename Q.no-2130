/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {
        if(head.next.next == null){
            return  head.val + head.next.val;
        }
        Stack<Integer> stack = new Stack<>();
        int n = 0;
        ListNode temp = head;
        while(temp!=null){
            n++;
            temp = temp.next;
        }
        temp = head;
        for(int i= 0; i<=(n/2-1);i++){
            stack.push(temp.val);
            temp = temp.next;
        }
        int maxSum = 0;
        while(temp!=null){
            int sum = temp.val+stack.pop();
            if(sum > maxSum){
                maxSum = sum;
            }
            temp = temp.next;
        }
        return maxSum;

        
    }
}
